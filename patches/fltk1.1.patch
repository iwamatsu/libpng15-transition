diff -Nru fltk1.1-1.1.10/debian/changelog fltk1.1-1.1.10/debian/changelog
--- fltk1.1-1.1.10/debian/changelog	2011-01-21 10:41:59.000000000 +0900
+++ fltk1.1-1.1.10/debian/changelog	2011-05-30 15:27:11.000000000 +0900
@@ -1,3 +1,10 @@
+fltk1.1 (1.1.10-4.1) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * linpng transition.
+
+ -- Nobuhiro Iwamatsu <iwamatsu@nigauri.org>  Mon, 30 May 2011 15:27:00 +0900
+
 fltk1.1 (1.1.10-4) unstable; urgency=low
 
   * src/Fl_x.cxx: fix cut/copy/paste operations on 64-bit architectures
diff -Nru fltk1.1-1.1.10/debian/patches/debian-changes fltk1.1-1.1.10/debian/patches/debian-changes
--- fltk1.1-1.1.10/debian/patches/debian-changes	2011-05-24 19:06:52.000000000 +0900
+++ fltk1.1-1.1.10/debian/patches/debian-changes	2011-05-30 15:30:25.000000000 +0900
@@ -567,3 +567,85 @@
  	$(POSTBUILD) $@ ../FL/mac.r
  
  gl_overlay$(EXEEXT): gl_overlay.o
+--- fltk1.1-1.1.10.orig/src/Fl_PNG_Image.cxx
++++ fltk1.1-1.1.10/src/Fl_PNG_Image.cxx
+@@ -66,7 +66,10 @@ Fl_PNG_Image::Fl_PNG_Image(const char *p
+   png_structp	pp;			// PNG read pointer
+   png_infop	info;			// PNG info pointers
+   png_bytep	*rows;			// PNG row pointers
+-
++  int bit_depth, color_type;
++  png_bytep trans_alpha;
++  int num_trans;
++  png_color_16p trans_color;
+ 
+   // Open the PNG file...
+   if ((fp = fopen(png, "rb")) == NULL) return;
+@@ -74,8 +77,11 @@ Fl_PNG_Image::Fl_PNG_Image(const char *p
+   // Setup the PNG data structures...
+   pp   = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
+   info = png_create_info_struct(pp);
+-
++#if PNG_LIBPNG_VER_MAJOR >= 1 && PNG_LIBPNG_VER_MINOR >= 4
++  if (setjmp(png_jmpbuf((pp))))
++#else
+   if (setjmp(pp->jmpbuf))
++#endif
+   {
+     Fl::warning("PNG file \"%s\" contains errors!\n", png);
+     return;
+@@ -87,27 +93,49 @@ Fl_PNG_Image::Fl_PNG_Image(const char *p
+   // Get the image dimensions and convert to grayscale or RGB...
+   png_read_info(pp, info);
+ 
+-  if (info->color_type == PNG_COLOR_TYPE_PALETTE)
++#if PNG_LIBPNG_VER_MAJOR >= 1 && PNG_LIBPNG_VER_MINOR >= 4
++  color_type = png_get_color_type(pp, info);
++#else
++  color_type = info->color_type;
++#endif
++  if (color_type == PNG_COLOR_TYPE_PALETTE)
+     png_set_expand(pp);
+ 
+-  if (info->color_type & PNG_COLOR_MASK_COLOR)
++  if (color_type & PNG_COLOR_MASK_COLOR)
+     channels = 3;
+   else
+     channels = 1;
+ 
+-  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || info->num_trans)
++#if PNG_LIBPNG_VER_MAJOR >= 1 && PNG_LIBPNG_VER_MINOR >= 4
++    png_get_tRNS(pp, info, NULL, &num_trans, NULL); 
++#else
++	num_trans = info->num_trans;
++#endif
++
++  if ((color_type & PNG_COLOR_MASK_ALPHA) || num_trans)
+     channels ++;
+ 
++#if PNG_LIBPNG_VER_MAJOR >= 1 && PNG_LIBPNG_VER_MINOR >= 4
++  w(png_get_image_width(pp, info));
++  h(png_get_image_height(pp, info));
++#else
+   w((int)(info->width));
+   h((int)(info->height));
++#endif
+   d(channels);
+ 
+-  if (info->bit_depth < 8)
++#if PNG_LIBPNG_VER_MAJOR >= 1 && PNG_LIBPNG_VER_MINOR >= 4
++  bit_depth = png_get_bit_depth(pp, info);
++#else
++  bit_depth = info->bit_depth;
++#endif
++
++  if (bit_depth < 8)
+   {
+     png_set_packing(pp);
+     png_set_expand(pp);
+   }
+-  else if (info->bit_depth == 16)
++  else if (bit_depth == 16)
+     png_set_strip_16(pp);
+ 
+ #  if defined(HAVE_PNG_GET_VALID) && defined(HAVE_PNG_SET_TRNS_TO_ALPHA)
